<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="49" started-at="2018-10-04T02:36:41Z" finished-at="2018-10-04T02:36:41Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="49" started-at="2018-10-04T02:36:41Z" finished-at="2018-10-04T02:36:41Z">
      <class name="day3Programming.OperatorsPractcie">
        <test-method status="PASS" signature="arithmeticOperations()[pri:0, instance:day3Programming.OperatorsPractcie@402f32ff]" name="arithmeticOperations" duration-ms="9" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arithmeticOperations -->
        <test-method status="PASS" signature="assignmentOperations()[pri:0, instance:day3Programming.OperatorsPractcie@402f32ff]" name="assignmentOperations" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignmentOperations -->
        <test-method status="PASS" signature="logicalOperations()[pri:0, instance:day3Programming.OperatorsPractcie@402f32ff]" name="logicalOperations" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logicalOperations -->
        <test-method status="PASS" signature="relationOperations()[pri:0, instance:day3Programming.OperatorsPractcie@402f32ff]" name="relationOperations" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- relationOperations -->
      </class> <!-- day3Programming.OperatorsPractcie -->
      <class name="day6Programming.ExceptionHandlingPractice">
        <test-method status="FAIL" signature="accessNewFile()[pri:0, instance:day6Programming.ExceptionHandlingPractice@7ac7a4e4]" name="accessNewFile" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D:/Selenium/Practice.html (No such file or directory)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D:/Selenium/Practice.html (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at day6Programming.ExceptionHandlingPractice.accessNewFile(ExceptionHandlingPractice.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessNewFile -->
        <test-method status="FAIL" signature="newExceptionThrown()[pri:0, instance:day6Programming.ExceptionHandlingPractice@7ac7a4e4]" name="newExceptionThrown" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[This is my own created exception, and it is displayed whenever i need]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: This is my own created exception, and it is displayed whenever i need
	at day6Programming.ExceptionHandlingPractice.newExceptionThrown(ExceptionHandlingPractice.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newExceptionThrown -->
        <test-method status="PASS" signature="tryCatchExceptionExample()[pri:0, instance:day6Programming.ExceptionHandlingPractice@7ac7a4e4]" name="tryCatchExceptionExample" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryCatchExceptionExample -->
      </class> <!-- day6Programming.ExceptionHandlingPractice -->
      <class name="day4Programming.SwitchStatementExample">
        <test-method status="PASS" signature="calculator()[pri:0, instance:day4Programming.SwitchStatementExample@6d8a00e3]" name="calculator" duration-ms="1" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calculator -->
      </class> <!-- day4Programming.SwitchStatementExample -->
      <class name="day5Programming.StringPractice">
        <test-method status="PASS" signature="fetchNamesFromEmailIDs()[pri:0, instance:day5Programming.StringPractice@548b7f67]" name="fetchNamesFromEmailIDs" duration-ms="2" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchNamesFromEmailIDs -->
        <test-method status="PASS" signature="stringExample()[pri:0, instance:day5Programming.StringPractice@548b7f67]" name="stringExample" duration-ms="2" started-at="2018-10-04T08:06:41Z" finished-at="2018-10-04T08:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stringExample -->
      </class> <!-- day5Programming.StringPractice -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
